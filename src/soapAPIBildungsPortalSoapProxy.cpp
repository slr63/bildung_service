/* soapAPIBildungsPortalSoapProxy.cpp
   Generated by gSOAP 2.8.104 for bildung.h

gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapAPIBildungsPortalSoapProxy.h"

APIBildungsPortalSoapProxy::APIBildungsPortalSoapProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	APIBildungsPortalSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

APIBildungsPortalSoapProxy::APIBildungsPortalSoapProxy(const APIBildungsPortalSoapProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

APIBildungsPortalSoapProxy::APIBildungsPortalSoapProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	APIBildungsPortalSoapProxy_init(_soap->imode, _soap->omode);
}

APIBildungsPortalSoapProxy::APIBildungsPortalSoapProxy(struct soap *_soap, const char *soap_endpoint_url)
{	this->soap = _soap;
	this->soap_own = false;
	APIBildungsPortalSoapProxy_init(_soap->imode, _soap->omode);
	soap_endpoint = soap_endpoint_url;
}

APIBildungsPortalSoapProxy::APIBildungsPortalSoapProxy(const char *soap_endpoint_url)
{	this->soap = soap_new();
	this->soap_own = true;
	APIBildungsPortalSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = soap_endpoint_url;
}

APIBildungsPortalSoapProxy::APIBildungsPortalSoapProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	APIBildungsPortalSoapProxy_init(iomode, iomode);
}

APIBildungsPortalSoapProxy::APIBildungsPortalSoapProxy(const char *soap_endpoint_url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	APIBildungsPortalSoapProxy_init(iomode, iomode);
	soap_endpoint = soap_endpoint_url;
}

APIBildungsPortalSoapProxy::APIBildungsPortalSoapProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	APIBildungsPortalSoapProxy_init(imode, omode);
}

APIBildungsPortalSoapProxy::~APIBildungsPortalSoapProxy()
{	if (this->soap_own)
	{	this->destroy();
		soap_free(this->soap);
	}
}

void APIBildungsPortalSoapProxy::APIBildungsPortalSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        { "SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL },
        { "SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL },
        { "xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL },
        { "xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL },
        { "ns1", "http://www.lsb-niedersachsen.de/bildungsportal/api/", NULL, NULL },
        { NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

APIBildungsPortalSoapProxy *APIBildungsPortalSoapProxy::copy()
{	APIBildungsPortalSoapProxy *dup = SOAP_NEW_UNMANAGED(APIBildungsPortalSoapProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

APIBildungsPortalSoapProxy& APIBildungsPortalSoapProxy::operator=(const APIBildungsPortalSoapProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void APIBildungsPortalSoapProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void APIBildungsPortalSoapProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	APIBildungsPortalSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void APIBildungsPortalSoapProxy::soap_noheader()
{	this->soap->header = NULL;
}

::SOAP_ENV__Header *APIBildungsPortalSoapProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *APIBildungsPortalSoapProxy::soap_fault()
{	return this->soap->fault;
}

const char *APIBildungsPortalSoapProxy::soap_fault_subcode()
{	return ::soap_fault_subcode(this->soap);
}

const char *APIBildungsPortalSoapProxy::soap_fault_string()
{	return ::soap_fault_string(this->soap);
}

const char *APIBildungsPortalSoapProxy::soap_fault_detail()
{	return ::soap_fault_detail(this->soap);
}

int APIBildungsPortalSoapProxy::soap_close_socket()
{	return ::soap_closesock(this->soap);
}

int APIBildungsPortalSoapProxy::soap_force_close_socket()
{	return ::soap_force_closesock(this->soap);
}

void APIBildungsPortalSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void APIBildungsPortalSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *APIBildungsPortalSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int APIBildungsPortalSoapProxy::send_dumpTableFields(const char *soap_endpoint_url, const char *soap_action, _ns1__dumpTableFields *ns1__dumpTableFields)
{
	struct __ns1__dumpTableFields soap_tmp___ns1__dumpTableFields;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.20.7.90/LSB_Test/APIBildungsPortal.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.lsb-niedersachsen.de/bildungsportal/api/dumpTableFields";
	soap_tmp___ns1__dumpTableFields.ns1__dumpTableFields = ns1__dumpTableFields;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__dumpTableFields(soap, &soap_tmp___ns1__dumpTableFields);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__dumpTableFields(soap, &soap_tmp___ns1__dumpTableFields, "-ns1:dumpTableFields", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__dumpTableFields(soap, &soap_tmp___ns1__dumpTableFields, "-ns1:dumpTableFields", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int APIBildungsPortalSoapProxy::recv_dumpTableFields(_ns1__dumpTableFieldsResponse &ns1__dumpTableFieldsResponse)
{
	ns1__dumpTableFieldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__dumpTableFieldsResponse.soap_get(soap, "ns1:dumpTableFieldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int APIBildungsPortalSoapProxy::send_getAllEvents(const char *soap_endpoint_url, const char *soap_action, _ns1__getAllEvents *ns1__getAllEvents)
{
	struct __ns1__getAllEvents soap_tmp___ns1__getAllEvents;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.20.7.90/LSB_Test/APIBildungsPortal.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.lsb-niedersachsen.de/bildungsportal/api/getAllEvents";
	soap_tmp___ns1__getAllEvents.ns1__getAllEvents = ns1__getAllEvents;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getAllEvents(soap, &soap_tmp___ns1__getAllEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAllEvents(soap, &soap_tmp___ns1__getAllEvents, "-ns1:getAllEvents", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAllEvents(soap, &soap_tmp___ns1__getAllEvents, "-ns1:getAllEvents", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int APIBildungsPortalSoapProxy::recv_getAllEvents(_ns1__getAllEventsResponse &ns1__getAllEventsResponse)
{
	ns1__getAllEventsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getAllEventsResponse.soap_get(soap, "ns1:getAllEventsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int APIBildungsPortalSoapProxy::send_getSingleEvent(const char *soap_endpoint_url, const char *soap_action, _ns1__getSingleEvent *ns1__getSingleEvent)
{
	struct __ns1__getSingleEvent soap_tmp___ns1__getSingleEvent;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.20.7.90/LSB_Test/APIBildungsPortal.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.lsb-niedersachsen.de/bildungsportal/api/getSingleEvent";
	soap_tmp___ns1__getSingleEvent.ns1__getSingleEvent = ns1__getSingleEvent;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getSingleEvent(soap, &soap_tmp___ns1__getSingleEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getSingleEvent(soap, &soap_tmp___ns1__getSingleEvent, "-ns1:getSingleEvent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getSingleEvent(soap, &soap_tmp___ns1__getSingleEvent, "-ns1:getSingleEvent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int APIBildungsPortalSoapProxy::recv_getSingleEvent(_ns1__getSingleEventResponse &ns1__getSingleEventResponse)
{
	ns1__getSingleEventResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getSingleEventResponse.soap_get(soap, "ns1:getSingleEventResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int APIBildungsPortalSoapProxy::send_register_(const char *soap_endpoint_url, const char *soap_action, _ns1__register *ns1__register)
{
	struct __ns1__register soap_tmp___ns1__register;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.20.7.90/LSB_Test/APIBildungsPortal.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.lsb-niedersachsen.de/bildungsportal/api/register";
	soap_tmp___ns1__register.ns1__register = ns1__register;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__register(soap, &soap_tmp___ns1__register);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__register(soap, &soap_tmp___ns1__register, "-ns1:register", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__register(soap, &soap_tmp___ns1__register, "-ns1:register", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int APIBildungsPortalSoapProxy::recv_register_(_ns1__registerResponse &ns1__registerResponse)
{
	ns1__registerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__registerResponse.soap_get(soap, "ns1:registerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int APIBildungsPortalSoapProxy::send_dumpTableFields_(const char *soap_endpoint_url, const char *soap_action, _ns1__dumpTableFields *ns1__dumpTableFields)
{
	struct __ns1__dumpTableFields_ soap_tmp___ns1__dumpTableFields_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.20.7.90/LSB_Test/APIBildungsPortal.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.lsb-niedersachsen.de/bildungsportal/api/dumpTableFields";
	soap_tmp___ns1__dumpTableFields_.ns1__dumpTableFields = ns1__dumpTableFields;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__dumpTableFields_(soap, &soap_tmp___ns1__dumpTableFields_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__dumpTableFields_(soap, &soap_tmp___ns1__dumpTableFields_, "-ns1:dumpTableFields", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__dumpTableFields_(soap, &soap_tmp___ns1__dumpTableFields_, "-ns1:dumpTableFields", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int APIBildungsPortalSoapProxy::recv_dumpTableFields_(_ns1__dumpTableFieldsResponse &ns1__dumpTableFieldsResponse)
{
	ns1__dumpTableFieldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__dumpTableFieldsResponse.soap_get(soap, "ns1:dumpTableFieldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int APIBildungsPortalSoapProxy::send_getAllEvents_(const char *soap_endpoint_url, const char *soap_action, _ns1__getAllEvents *ns1__getAllEvents)
{
	struct __ns1__getAllEvents_ soap_tmp___ns1__getAllEvents_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.20.7.90/LSB_Test/APIBildungsPortal.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.lsb-niedersachsen.de/bildungsportal/api/getAllEvents";
	soap_tmp___ns1__getAllEvents_.ns1__getAllEvents = ns1__getAllEvents;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getAllEvents_(soap, &soap_tmp___ns1__getAllEvents_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAllEvents_(soap, &soap_tmp___ns1__getAllEvents_, "-ns1:getAllEvents", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAllEvents_(soap, &soap_tmp___ns1__getAllEvents_, "-ns1:getAllEvents", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int APIBildungsPortalSoapProxy::recv_getAllEvents_(_ns1__getAllEventsResponse &ns1__getAllEventsResponse)
{
	ns1__getAllEventsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getAllEventsResponse.soap_get(soap, "ns1:getAllEventsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int APIBildungsPortalSoapProxy::send_getSingleEvent_(const char *soap_endpoint_url, const char *soap_action, _ns1__getSingleEvent *ns1__getSingleEvent)
{
	struct __ns1__getSingleEvent_ soap_tmp___ns1__getSingleEvent_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.20.7.90/LSB_Test/APIBildungsPortal.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.lsb-niedersachsen.de/bildungsportal/api/getSingleEvent";
	soap_tmp___ns1__getSingleEvent_.ns1__getSingleEvent = ns1__getSingleEvent;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getSingleEvent_(soap, &soap_tmp___ns1__getSingleEvent_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getSingleEvent_(soap, &soap_tmp___ns1__getSingleEvent_, "-ns1:getSingleEvent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getSingleEvent_(soap, &soap_tmp___ns1__getSingleEvent_, "-ns1:getSingleEvent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int APIBildungsPortalSoapProxy::recv_getSingleEvent_(_ns1__getSingleEventResponse &ns1__getSingleEventResponse)
{
	ns1__getSingleEventResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getSingleEventResponse.soap_get(soap, "ns1:getSingleEventResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of client proxy code */
